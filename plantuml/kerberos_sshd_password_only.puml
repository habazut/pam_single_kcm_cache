@startuml

title 
    **SSH with Password Authentication**
    Provide every shell session an individual and isolated credential cache in KCM.
end title
hide footbox

actor user
box sshd
    participant sshd
    participant libpam
    participant "pam_sssd.so" as pam_sssd
    participant "pam_systemd.so" as pam_systemd
    participant "pam_single_kcm_cache.so" as pam_single_kcm_cache
end box
participant sssd
participant "systemd --user" as systemd
box KCM
    participant "sssd-kcm" as sssd_kcm
    participant "credential cache KCM:$UID:61555" as default_cache
    participant "credential cache KCM:$UID:sitmchszro" as random_cache
end box
participant bash
box Active Directory
    participant KDC as kdc
end box

user -> sshd : connects using //ssh//\nwith authentication method //password//
sshd -> libpam : authenticate user
libpam -> pam_sssd : //pam_sm_setcred()//
pam_sssd -> sssd : authenticate
sssd -> kdc : authenticate and get TGT
sssd -> sssd_kcm : get default cache
sssd -> default_cache : place TGT
sshd -> libpam : setup session
libpam -> pam_systemd : //pam_sm_open_session()//
create systemd
pam_systemd -> systemd: start if not running yet
libpam -> pam_single_kcm_cache : //pam_sm_open_session()//
pam_single_kcm_cache -> sssd_kcm : iterate all suitable caches to find newest TGT
note right: the default cache may change in between
pam_single_kcm_cache -> default_cache: get TGT
pam_single_kcm_cache -> sssd_kcm : create new random cache
create random_cache
sssd_kcm -> random_cache: create
pam_single_kcm_cache -> random_cache: place newest TGT
pam_single_kcm_cache -> libpam: set //KRB5CCNAME=KCM:$UID:sitmchszro//
create bash
sshd -> bash : start

@enduml


